{"ast":null,"code":"var _jsxFileName = \"/Users/brantleymorris/Documents/BC_Classwork/book_search/client/src/components/BookCard/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport API from \"../../utils/API\";\nimport { useStateContext } from \"../../utils/GlobalState\";\nimport { Container, Row, Col } from \"../Grid\";\nimport { List, ListItem } from \"../List\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BookCard = () => {\n  _s();\n\n  // TODO - remove, don't need state or dispatch\n  const [state, dispatch] = useStateContext(); // TODO - add useEffect to get books (API.findAll) on load ([])\n\n  const getBooks = async () => {\n    const response = await API.getBooks();\n    console.log(response);\n    return response;\n  };\n\n  useEffect(() => {\n    getBooks();\n  }, []);\n  return (\n    /*#__PURE__*/\n    // TODO - remove state and get data from db\n    //      - add button to remove book\n    //      - add button to link to book site\n    //      - update to reflect saved books instead of posts\n    //     response && response.length ? (\n    //         response.map(result =>\n    //             <ListItem key={result._id}>\n    //                 <Container>\n    //                     <Row>\n    //                         <Col size=\"md-3\">\n    //                             <img src={result.imageLinks.smallThumbnail} />\n    //                         </Col>\n    //                         <Col size=\"md-9\">\n    //                             <Container>\n    //                                 <Row>\n    //                                     <strong>\n    //                                         {result.title} by {result.author}\n    //                                     </strong>\n    //                                 </Row>\n    //                                 {result.description ? (\n    //                                     <Row>\n    //                                         {result.description.substring(0,250) /*only load 250 characters*/} \n    //                                     </Row>\n    //                                     ) : (\n    //                                     <Row>\n    //                                         No description available.    \n    //                                     </Row>\n    //                                 )}\n    //                             </Container>\n    //                         </Col>\n    //                     </Row>\n    //                 </Container>\n    //             </ListItem>\n    //         )\n    // ) : (\n    //     <h3>Search for a book to see results.</h3>\n    // )\n    _jsxDEV(Container, {\n      fluid: true,\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          size: \"md-4\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          size: \"md-8\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Title, pass in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Author\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Body\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)\n  );\n};\n\n_s(BookCard, \"mSQZEtzEnYjgl9gkhOn9BoWraRc=\", false, function () {\n  return [useStateContext];\n});\n\n_c = BookCard;\nexport default BookCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookCard\");","map":{"version":3,"sources":["/Users/brantleymorris/Documents/BC_Classwork/book_search/client/src/components/BookCard/index.js"],"names":["React","useEffect","API","useStateContext","Container","Row","Col","List","ListItem","BookCard","state","dispatch","getBooks","response","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AACA,SAASC,eAAT,QAAgC,yBAAhC;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,QAAoC,SAApC;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,SAA/B;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAEnB;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,eAAe,EAAzC,CAHmB,CAKnB;;AACA,QAAMS,QAAQ,GAAG,YAAY;AACzB,UAAMC,QAAQ,GAAG,MAAMX,GAAG,CAACU,QAAJ,EAAvB;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,WAAOA,QAAP;AACH,GAJD;;AAMAZ,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,QAAQ;AACX,GAFQ,EAEN,EAFM,CAAT;AAIA;AAAA;AAEJ;AACA;AACA;AACA;AAEI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEI,YAAC,SAAD;AAAW,MAAA,KAAK,MAAhB;AAAA,6BACI,QAAC,GAAD;AAAA,gCACI,QAAC,GAAD;AAAK,UAAA,IAAI,EAAC,MAAV;AAAA,iCACI;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII,QAAC,GAAD;AAAK,UAAA,IAAI,EAAC,MAAV;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ,eASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBATJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AA3CJ;AAgEH,CAhFD;;GAAMH,Q;UAGwBN,e;;;KAHxBM,Q;AAkFN,eAAeA,QAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport API from \"../../utils/API\";\nimport { useStateContext } from \"../../utils/GlobalState\";\nimport { Container, Row, Col } from \"../Grid\";\nimport { List, ListItem } from \"../List\";\n\nconst BookCard = () => {\n\n    // TODO - remove, don't need state or dispatch\n    const [state, dispatch] = useStateContext();\n\n    // TODO - add useEffect to get books (API.findAll) on load ([])\n    const getBooks = async () => {\n        const response = await API.getBooks();\n        console.log(response);\n        return response;\n    };\n\n    useEffect(() => {\n        getBooks();\n    }, []);\n\n    return (\n\n// TODO - remove state and get data from db\n//      - add button to remove book\n//      - add button to link to book site\n//      - update to reflect saved books instead of posts\n\n    //     response && response.length ? (\n    //         response.map(result =>\n    //             <ListItem key={result._id}>\n    //                 <Container>\n    //                     <Row>\n    //                         <Col size=\"md-3\">\n    //                             <img src={result.imageLinks.smallThumbnail} />\n    //                         </Col>\n    //                         <Col size=\"md-9\">\n    //                             <Container>\n    //                                 <Row>\n    //                                     <strong>\n    //                                         {result.title} by {result.author}\n    //                                     </strong>\n    //                                 </Row>\n    //                                 {result.description ? (\n    //                                     <Row>\n    //                                         {result.description.substring(0,250) /*only load 250 characters*/} \n    //                                     </Row>\n    //                                     ) : (\n    //                                     <Row>\n    //                                         No description available.    \n    //                                     </Row>\n    //                                 )}\n    //                             </Container>\n    //                         </Col>\n    //                     </Row>\n    //                 </Container>\n    //             </ListItem>\n    //         )\n\n        \n    // ) : (\n    //     <h3>Search for a book to see results.</h3>\n    // )\n\n        <Container fluid>\n            <Row>\n                <Col size=\"md-4\">\n                    <img />\n                </Col>\n                <Col size=\"md-8\">\n                    <h1>\n                        Title, pass in\n                    </h1>\n\n                    <h2>\n                        Author\n                    </h2>\n\n                    <p>\n                        Body\n                    </p>\n                </Col>\n            </Row>\n        </Container>\n    );\n};\n\nexport default BookCard;"]},"metadata":{},"sourceType":"module"}