{"ast":null,"code":"var _jsxFileName = \"/Users/brantleymorris/Documents/BC_Classwork/book_search/client/src/components/BookCard/index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport API from \"../../utils/API\";\nimport { useStateContext } from \"../../utils/GlobalState\";\nimport { Container, Row, Col } from \"../Grid\";\nimport { List, ListItem } from \"../List\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BookCard = () => {\n  _s();\n\n  const [state, dispatch] = useStateContext();\n\n  const addSaved = async id => {\n    try {\n      const data = state.posts.id;\n      console.log(state.posts.id);\n      const response = await API.saveBook(data);\n      console.log(response);\n    } catch (err) {\n      console.log(err);\n    }\n\n    ;\n  };\n\n  return (// TODO - add button to remove book\n    //      - add button to link to book site\n    //      - update to reflect saved books instead of posts\n    state && state.posts && state.posts.length ? state.posts.map(result => /*#__PURE__*/_jsxDEV(ListItem, {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            size: \"md-3\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: result.volumeInfo.imageLinks.smallThumbnail\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            size: \"md-9\",\n            children: /*#__PURE__*/_jsxDEV(Container, {\n              children: [/*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: [result.volumeInfo.title, \" by \", result.volumeInfo.authors.join(\",\")]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 39,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn\",\n                  onClick: () => addSaved(result.id),\n                  children: \"\\u2764\\uFE0F Add to Saved\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 42,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 37\n              }, this), result.volumeInfo.description ? /*#__PURE__*/_jsxDEV(Row, {\n                children: result.volumeInfo.description.substring(0, 250)\n                /*only load 250 characters*/\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 41\n              }, this) : /*#__PURE__*/_jsxDEV(Row, {\n                children: \"No description available.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this)\n    }, result.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }, this)) : /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Search for a book to see results.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this) // <Container fluid>\n    //     <Row>\n    //         <Col size=\"md-4\">\n    //             <img />\n    //         </Col>\n    //         <Col size=\"md-8\">\n    //             <h1>\n    //                 Title, pass in\n    //             </h1>\n    //             <h2>\n    //                 Author\n    //             </h2>\n    //             <p>\n    //                 Body\n    //             </p>\n    //         </Col>\n    //     </Row>\n    // </Container>\n\n  );\n};\n\n_s(BookCard, \"ocLHxeEbbTHr7/Oo0i0nW+MwUvc=\", false, function () {\n  return [useStateContext];\n});\n\n_c = BookCard;\nexport default BookCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookCard\");","map":{"version":3,"sources":["/Users/brantleymorris/Documents/BC_Classwork/book_search/client/src/components/BookCard/index.js"],"names":["React","API","useStateContext","Container","Row","Col","List","ListItem","BookCard","state","dispatch","addSaved","id","data","posts","console","log","response","saveBook","err","length","map","result","volumeInfo","imageLinks","smallThumbnail","title","authors","join","description","substring"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AACA,SAASC,eAAT,QAAgC,yBAAhC;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,QAAoC,SAApC;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,SAA/B;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAEnB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,eAAe,EAAzC;;AAEA,QAAMS,QAAQ,GAAG,MAAOC,EAAP,IAAc;AAC3B,QAAI;AACA,YAAMC,IAAI,GAAGJ,KAAK,CAACK,KAAN,CAAYF,EAAzB;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYP,KAAK,CAACK,KAAN,CAAYF,EAAxB;AACA,YAAMK,QAAQ,GAAG,MAAMhB,GAAG,CAACiB,QAAJ,CAAaL,IAAb,CAAvB;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ;AACH,KALD,CAKE,OAAOE,GAAP,EAAY;AACVJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ;AACH;;AAAA;AACJ,GATD;;AAWA,SAEJ;AACA;AACA;AAEQV,IAAAA,KAAK,IAAIA,KAAK,CAACK,KAAf,IAAwBL,KAAK,CAACK,KAAN,CAAYM,MAApC,GACIX,KAAK,CAACK,KAAN,CAAYO,GAAZ,CAAgBC,MAAM,iBAClB,QAAC,QAAD;AAAA,6BACI,QAAC,SAAD;AAAA,+BACI,QAAC,GAAD;AAAA,kCACI,QAAC,GAAD;AAAK,YAAA,IAAI,EAAC,MAAV;AAAA,mCACI;AAAK,cAAA,GAAG,EAAEA,MAAM,CAACC,UAAP,CAAkBC,UAAlB,CAA6BC;AAAvC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII,QAAC,GAAD;AAAK,YAAA,IAAI,EAAC,MAAV;AAAA,mCACI,QAAC,SAAD;AAAA,sCACI,QAAC,GAAD;AAAA,wCACI;AAAA,6BACKH,MAAM,CAACC,UAAP,CAAkBG,KADvB,UACkCJ,MAAM,CAACC,UAAP,CAAkBI,OAAlB,CAA0BC,IAA1B,CAA+B,GAA/B,CADlC;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAII;AAAQ,kBAAA,SAAS,EAAC,KAAlB;AAAwB,kBAAA,OAAO,EAAG,MAAMjB,QAAQ,CAACW,MAAM,CAACV,EAAR,CAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EASKU,MAAM,CAACC,UAAP,CAAkBM,WAAlB,gBACG,QAAC,GAAD;AAAA,0BACKP,MAAM,CAACC,UAAP,CAAkBM,WAAlB,CAA8BC,SAA9B,CAAwC,CAAxC,EAA0C,GAA1C;AAA+C;;AADpD;AAAA;AAAA;AAAA;AAAA,sBADH,gBAKG,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAdR;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,OAAeR,MAAM,CAACV,EAAtB;AAAA;AAAA;AAAA;AAAA,YADJ,CADJ,gBAoCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA1CJ,CA6CI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAhEJ;AAkEH,CAjFD;;GAAMJ,Q;UAEwBN,e;;;KAFxBM,Q;AAmFN,eAAeA,QAAf","sourcesContent":["import React from \"react\";\nimport API from \"../../utils/API\";\nimport { useStateContext } from \"../../utils/GlobalState\";\nimport { Container, Row, Col } from \"../Grid\";\nimport { List, ListItem } from \"../List\";\n\nconst BookCard = () => {\n\n    const [state, dispatch] = useStateContext();\n\n    const addSaved = async (id) => {\n        try {\n            const data = state.posts.id;\n            console.log(state.posts.id);\n            const response = await API.saveBook(data);\n            console.log(response);\n        } catch (err) {\n            console.log(err)\n        };\n    };\n\n    return (\n\n// TODO - add button to remove book\n//      - add button to link to book site\n//      - update to reflect saved books instead of posts\n\n        state && state.posts && state.posts.length ? (\n            state.posts.map(result =>\n                <ListItem key={result.id}>\n                    <Container>\n                        <Row>\n                            <Col size=\"md-3\">\n                                <img src={result.volumeInfo.imageLinks.smallThumbnail} />\n                            </Col>\n                            <Col size=\"md-9\">\n                                <Container>\n                                    <Row>\n                                        <strong>\n                                            {result.volumeInfo.title} by {result.volumeInfo.authors.join(\",\")}\n                                        </strong>\n                                        <button className=\"btn\" onClick={ () => addSaved(result.id)}>\n                                            ❤️ Add to Saved\n                                        </button>\n                                    </Row>\n                                    {result.volumeInfo.description ? (\n                                        <Row>\n                                            {result.volumeInfo.description.substring(0,250) /*only load 250 characters*/} \n                                        </Row>\n                                        ) : (\n                                        <Row>\n                                            No description available.    \n                                        </Row>\n                                    )}\n                                </Container>\n                            </Col>\n                        </Row>\n                    </Container>\n                </ListItem>\n            )\n\n        \n    ) : (\n        <h3>Search for a book to see results.</h3>\n    )\n\n        // <Container fluid>\n        //     <Row>\n        //         <Col size=\"md-4\">\n        //             <img />\n        //         </Col>\n        //         <Col size=\"md-8\">\n        //             <h1>\n        //                 Title, pass in\n        //             </h1>\n\n        //             <h2>\n        //                 Author\n        //             </h2>\n\n        //             <p>\n        //                 Body\n        //             </p>\n        //         </Col>\n        //     </Row>\n        // </Container>\n    );\n};\n\nexport default BookCard;"]},"metadata":{},"sourceType":"module"}