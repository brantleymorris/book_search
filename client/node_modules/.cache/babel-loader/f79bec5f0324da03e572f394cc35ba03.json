{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useReducer, createContext } from \"react\";\nconst StateContext = /*#__PURE__*/createContext();\nconst {\n  Provider\n} = StateContext;\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"search\":\n      return { ...state,\n        posts: action.result,\n        loading: false\n      };\n    // add more cases as necesary\n\n    default:\n      return state;\n  }\n}; // need to tailor this to search and saved needs\n\n\nconst initialState = {\n  saved: [],\n  resul: {},\n  loading: false\n}; // sets up the state to be accessed by components later\n\nconst StateProvider = ({ ...props\n}) => {\n  _s();\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return \"PROVIDER ELEMENT HERE\";\n}; // not sure what this is\n\n\n_s(StateProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = StateProvider;\n\nconst useStateContext = () => {};\n\nexport { StateProvider, useStateContext };\n\nvar _c;\n\n$RefreshReg$(_c, \"StateProvider\");","map":{"version":3,"sources":["/Users/brantleymorris/Documents/BC_Classwork/book_search/client/src/utils/GlobalState.js"],"names":["React","useReducer","createContext","StateContext","Provider","reducer","state","action","type","posts","result","loading","initialState","saved","resul","StateProvider","props","dispatch","useStateContext"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,aAA5B,QAAiD,OAAjD;AAEA,MAAMC,YAAY,gBAAGD,aAAa,EAAlC;AACA,MAAM;AAACE,EAAAA;AAAD,IAAaD,YAAnB;;AAEA,MAAME,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC/B,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,QAAL;AACI,aAAM,EACF,GAAGF,KADD;AAEFG,QAAAA,KAAK,EAAEF,MAAM,CAACG,MAFZ;AAGFC,QAAAA,OAAO,EAAE;AAHP,OAAN;AAKJ;;AACJ;AACI,aAAOL,KAAP;AATJ;AAWH,CAZD,C,CAcA;;;AACA,MAAMM,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,EADU;AAEjBC,EAAAA,KAAK,EAAE,EAFU;AAGjBH,EAAAA,OAAO,EAAE;AAHQ,CAArB,C,CAMA;;AACA,MAAMI,aAAa,GAAG,CAAC,EAAE,GAAGC;AAAL,CAAD,KAAkB;AAAA;;AACpC,QAAM,CAACV,KAAD,EAAQW,QAAR,IAAoBhB,UAAU,CAACI,OAAD,EAAUO,YAAV,CAApC;AACA,SAAO,uBAAP;AACH,CAHD,C,CAKA;;;GALMG,a;;KAAAA,a;;AAMN,MAAMG,eAAe,GAAG,MAAM,CAAE,CAAhC;;AAEA,SAASH,aAAT,EAAwBG,eAAxB","sourcesContent":["import React, { useReducer, createContext } from \"react\";\n\nconst StateContext = createContext();\nconst {Provider} = StateContext;\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case \"search\":\n            return{\n                ...state,\n                posts: action.result,\n                loading: false\n            };\n        // add more cases as necesary\n    default:\n        return state;\n    }\n};\n\n// need to tailor this to search and saved needs\nconst initialState = {\n    saved: [],\n    resul: {},\n    loading: false\n};\n\n// sets up the state to be accessed by components later\nconst StateProvider = ({ ...props }) => {\n    const [state, dispatch] = useReducer(reducer, initialState);\n    return \"PROVIDER ELEMENT HERE\";\n};\n\n// not sure what this is\nconst useStateContext = () => {};\n\nexport { StateProvider, useStateContext };"]},"metadata":{},"sourceType":"module"}