{"ast":null,"code":"var _jsxFileName = \"/Users/brantleymorris/Documents/BC_Classwork/book_search/client/src/components/BookCard/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport API from \"../../utils/API\";\nimport { useStateContext } from \"../../utils/GlobalState\";\nimport { Container, Row, Col } from \"../Grid\";\nimport { List, ListItem } from \"../List\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BookCard = () => {\n  _s();\n\n  // TODO - remove, don't need state or dispatch\n  const [state, dispatch] = useStateContext(); // TODO - add useEffect to get books (API.findAll) on load ([])\n\n  const getBooks = async () => {\n    const response = await API.getBooks();\n    console.log(response.data);\n    const books = response.data;\n    return books;\n  };\n\n  useEffect(() => {\n    getBooks();\n    console.log(\"books\");\n  }, []);\n  return (// TODO - remove state and get data from db\n    //      - add button to remove book\n    //      - add button to link to book site\n    //      - update to reflect saved books instead of posts\n    books ? books.map(result => /*#__PURE__*/_jsxDEV(ListItem, {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            size: \"md-3\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: result.imageLinks.smallThumbnail\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            size: \"md-9\",\n            children: /*#__PURE__*/_jsxDEV(Container, {\n              children: [/*#__PURE__*/_jsxDEV(Row, {\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: [result.title, \" by \", result.author]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 43,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 37\n              }, this), result.description ? /*#__PURE__*/_jsxDEV(Row, {\n                children: result.description.substring(0, 250)\n                /*only load 250 characters*/\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 41\n              }, this) : /*#__PURE__*/_jsxDEV(Row, {\n                children: \"No description available.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this)\n    }, result._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this)) : /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Search for a book to see results.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this) //         <Container fluid>\n    //             <Row>\n    //                 <Col size=\"md-4\">\n    //                     <img />\n    //                 </Col>\n    //                 <Col size=\"md-8\">\n    //                     <h1>\n    //                         Title, pass in\n    //                     </h1>\n    //                     <h2>\n    //                         Author\n    //                     </h2>\n    //                     <p>\n    //                         Body\n    //                     </p>\n    //                 </Col>\n    //             </Row>\n    //         </Container>\n\n  );\n};\n\n_s(BookCard, \"mSQZEtzEnYjgl9gkhOn9BoWraRc=\", false, function () {\n  return [useStateContext];\n});\n\n_c = BookCard;\nexport default BookCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookCard\");","map":{"version":3,"sources":["/Users/brantleymorris/Documents/BC_Classwork/book_search/client/src/components/BookCard/index.js"],"names":["React","useEffect","API","useStateContext","Container","Row","Col","List","ListItem","BookCard","state","dispatch","getBooks","response","console","log","data","books","map","result","imageLinks","smallThumbnail","title","author","description","substring","_id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AACA,SAASC,eAAT,QAAgC,yBAAhC;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,QAAoC,SAApC;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,SAA/B;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAEnB;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,eAAe,EAAzC,CAHmB,CAKnB;;AACA,QAAMS,QAAQ,GAAG,YAAY;AACzB,UAAMC,QAAQ,GAAG,MAAMX,GAAG,CAACU,QAAJ,EAAvB;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACA,UAAMC,KAAK,GAAGJ,QAAQ,CAACG,IAAvB;AACA,WAAOC,KAAP;AACH,GALD;;AAOAhB,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,QAAQ;AACRE,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACH,GAHQ,EAGN,EAHM,CAAT;AAKA,SAEJ;AACA;AACA;AACA;AAEQE,IAAAA,KAAK,GACDA,KAAK,CAACC,GAAN,CAAUC,MAAM,iBACZ,QAAC,QAAD;AAAA,6BACI,QAAC,SAAD;AAAA,+BACI,QAAC,GAAD;AAAA,kCACI,QAAC,GAAD;AAAK,YAAA,IAAI,EAAC,MAAV;AAAA,mCACI;AAAK,cAAA,GAAG,EAAEA,MAAM,CAACC,UAAP,CAAkBC;AAA5B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII,QAAC,GAAD;AAAK,YAAA,IAAI,EAAC,MAAV;AAAA,mCACI,QAAC,SAAD;AAAA,sCACI,QAAC,GAAD;AAAA,uCACI;AAAA,6BACKF,MAAM,CAACG,KADZ,UACuBH,MAAM,CAACI,MAD9B;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBADJ,EAMKJ,MAAM,CAACK,WAAP,gBACG,QAAC,GAAD;AAAA,0BACKL,MAAM,CAACK,WAAP,CAAmBC,SAAnB,CAA6B,CAA7B,EAA+B,GAA/B;AAAoC;;AADzC;AAAA;AAAA;AAAA;AAAA,sBADH,gBAKG,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAXR;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,OAAeN,MAAM,CAACO,GAAtB;AAAA;AAAA;AAAA;AAAA,YADJ,CADC,gBAiCL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAxCJ,CA2CJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AA9DI;AAiEH,CAnFD;;GAAMjB,Q;UAGwBN,e;;;KAHxBM,Q;AAqFN,eAAeA,QAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport API from \"../../utils/API\";\nimport { useStateContext } from \"../../utils/GlobalState\";\nimport { Container, Row, Col } from \"../Grid\";\nimport { List, ListItem } from \"../List\";\n\nconst BookCard = () => {\n\n    // TODO - remove, don't need state or dispatch\n    const [state, dispatch] = useStateContext();\n\n    // TODO - add useEffect to get books (API.findAll) on load ([])\n    const getBooks = async () => {\n        const response = await API.getBooks();\n        console.log(response.data);\n        const books = response.data;\n        return books;\n    };\n\n    useEffect(() => {\n        getBooks();\n        console.log(\"books\")\n    }, []);\n\n    return (\n\n// TODO - remove state and get data from db\n//      - add button to remove book\n//      - add button to link to book site\n//      - update to reflect saved books instead of posts\n\n        books ? (\n            books.map(result =>\n                <ListItem key={result._id}>\n                    <Container>\n                        <Row>\n                            <Col size=\"md-3\">\n                                <img src={result.imageLinks.smallThumbnail} />\n                            </Col>\n                            <Col size=\"md-9\">\n                                <Container>\n                                    <Row>\n                                        <strong>\n                                            {result.title} by {result.author}\n                                        </strong>\n                                    </Row>\n                                    {result.description ? (\n                                        <Row>\n                                            {result.description.substring(0,250) /*only load 250 characters*/} \n                                        </Row>\n                                        ) : (\n                                        <Row>\n                                            No description available.    \n                                        </Row>\n                                    )}\n                                </Container>\n                            </Col>\n                        </Row>\n                    </Container>\n                </ListItem>\n            )\n\n        \n    ) : (\n        <h3>Search for a book to see results.</h3>\n    )\n\n//         <Container fluid>\n//             <Row>\n//                 <Col size=\"md-4\">\n//                     <img />\n//                 </Col>\n//                 <Col size=\"md-8\">\n//                     <h1>\n//                         Title, pass in\n//                     </h1>\n\n//                     <h2>\n//                         Author\n//                     </h2>\n\n//                     <p>\n//                         Body\n//                     </p>\n//                 </Col>\n//             </Row>\n//         </Container>\n\n    );\n};\n\nexport default BookCard;"]},"metadata":{},"sourceType":"module"}