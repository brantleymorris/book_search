{"ast":null,"code":"import _slicedToArray from\"/Users/brantleymorris/Documents/BC_Classwork/book_search/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectWithoutProperties from\"/Users/brantleymorris/Documents/BC_Classwork/book_search/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import _objectSpread from\"/Users/brantleymorris/Documents/BC_Classwork/book_search/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React,{useContext,useReducer,createContext}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";var StateContext=/*#__PURE__*/createContext();var Provider=StateContext.Provider;var reducer=function reducer(state,action){switch(action.type){case\"search\":return _objectSpread(_objectSpread({},state),{},{posts:action.post.items,loading:false});// add more cases as necesary\ndefault:return state;}};// need to tailor this to search and saved needs\n// posts key value is added when the state is updated\nvar initialState={saved:[],posts:[],result:{},loading:false};// sets up the state to be accessed by components later\nvar StateProvider=function StateProvider(_ref){var _ref$value=_ref.value,value=_ref$value===void 0?[]:_ref$value,props=_objectWithoutProperties(_ref,[\"value\"]);var _useReducer=useReducer(reducer,initialState),_useReducer2=_slicedToArray(_useReducer,2),state=_useReducer2[0],dispatch=_useReducer2[1];return/*#__PURE__*/_jsx(Provider,_objectSpread({value:[state,dispatch]},props));};// not sure what this is\nvar useStateContext=function useStateContext(){return useContext(StateContext);};export{StateProvider,useStateContext};","map":{"version":3,"sources":["/Users/brantleymorris/Documents/BC_Classwork/book_search/client/src/utils/GlobalState.js"],"names":["React","useContext","useReducer","createContext","StateContext","Provider","reducer","state","action","type","posts","post","items","loading","initialState","saved","result","StateProvider","value","props","dispatch","useStateContext"],"mappings":"qjBAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,CAA4BC,UAA5B,CAAwCC,aAAxC,KAA6D,OAA7D,C,2CAEA,GAAMC,CAAAA,YAAY,cAAGD,aAAa,EAAlC,C,GACOE,CAAAA,Q,CAAYD,Y,CAAZC,Q,CAEP,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,KAAD,CAAQC,MAAR,CAAmB,CAC/B,OAAQA,MAAM,CAACC,IAAf,EACI,IAAK,QAAL,CACI,sCACOF,KADP,MAEIG,KAAK,CAAEF,MAAM,CAACG,IAAP,CAAYC,KAFvB,CAGIC,OAAO,CAAE,KAHb,GAKJ;AACJ,QACI,MAAON,CAAAA,KAAP,CATJ,CAWH,CAZD,CAcA;AACA;AACA,GAAMO,CAAAA,YAAY,CAAG,CACjBC,KAAK,CAAE,EADU,CAEjBL,KAAK,CAAE,EAFU,CAGjBM,MAAM,CAAE,EAHS,CAIjBH,OAAO,CAAE,KAJQ,CAArB,CAOA;AACA,GAAMI,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,MAA8B,qBAA3BC,KAA2B,CAA3BA,KAA2B,qBAAnB,EAAmB,YAAZC,KAAY,0DACtBjB,UAAU,CAACI,OAAD,CAAUQ,YAAV,CADY,4CACzCP,KADyC,iBAClCa,QADkC,iBAEhD,mBAAO,KAAC,QAAD,gBAAU,KAAK,CAAE,CAACb,KAAD,CAAQa,QAAR,CAAjB,EAAwCD,KAAxC,EAAP,CACH,CAHD,CAKA;AACA,GAAME,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAAM,CAC1B,MAAOpB,CAAAA,UAAU,CAACG,YAAD,CAAjB,CACH,CAFD,CAIA,OAASa,aAAT,CAAwBI,eAAxB","sourcesContent":["import React, { useContext, useReducer, createContext } from \"react\";\n\nconst StateContext = createContext();\nconst {Provider} = StateContext;\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case \"search\":\n            return{\n                ...state,\n                posts: action.post.items,\n                loading: false\n            };\n        // add more cases as necesary\n    default:\n        return state;\n    }\n};\n\n// need to tailor this to search and saved needs\n// posts key value is added when the state is updated\nconst initialState = {\n    saved: [],\n    posts: [],\n    result: {},\n    loading: false\n};\n\n// sets up the state to be accessed by components later\nconst StateProvider = ({ value = [], ...props }) => {\n    const [state, dispatch] = useReducer(reducer, initialState);\n    return <Provider value={[state, dispatch]} {...props} />;\n};\n\n// not sure what this is\nconst useStateContext = () => {\n    return useContext(StateContext);\n};\n\nexport { StateProvider, useStateContext };"]},"metadata":{},"sourceType":"module"}