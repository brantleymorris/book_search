{"version":3,"sources":["utils/GlobalState.js","components/Grid/index.js","utils/API.js","components/SearchBar/index.js","components/List/index.js","components/SearchResults/index.js","pages/Home.js","components/BookCard/index.js","pages/Saved.js","components/Nav/index.js","App.js","index.js"],"names":["StateContext","createContext","Provider","reducer","state","action","type","posts","post","items","loading","initialState","saved","result","StateProvider","value","props","useReducer","dispatch","useStateContext","useContext","Container","fluid","children","className","Row","Col","size","split","map","join","str","queryString","axios","get","bookData","id","delete","Search","titleRef","useRef","handleClick","e","a","preventDefault","API","current","response","console","log","data","ref","onClick","ListItem","SearchResults","addSaved","filteredData","title","author","authors","description","image","imageLinks","smallThumbnail","link","infoLink","length","src","volumeInfo","substring","href","target","rel","Home","BookCard","useState","undefined","books","setBooks","getBooks","deleteBook","removed","useEffect","_id","Saved","Nav","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7a70797b.chunk.js","sourcesContent":["import React, { useContext, useReducer, createContext } from \"react\";\n\nconst StateContext = createContext();\nconst {Provider} = StateContext;\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case \"search\":\n            return{\n                ...state,\n                posts: action.post.items,\n                loading: false\n            };\n        // add more cases as necesary\n    default:\n        return state;\n    }\n};\n\n// need to tailor this to search and saved needs\n// posts key value is added when the state is updated\nconst initialState = {\n    saved: [],\n    posts: [],\n    result: {},\n    loading: false\n};\n\n// sets up the state to be accessed by components later\nconst StateProvider = ({ value = [], ...props }) => {\n    const [state, dispatch] = useReducer(reducer, initialState);\n    return <Provider value={[state, dispatch]} {...props} />;\n};\n\n// not sure what this is\nconst useStateContext = () => {\n    return useContext(StateContext);\n};\n\nexport { StateProvider, useStateContext };","import React from \"react\";\n\n// this allows the user to specify if they want the container to be fluid or not\n// container-fluid or container\nexport const Container = ({fluid, children}) => {\n    return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n};\n\n// this allows the user to specify if they want the row to be fluid or not\n// row-fluid or row\nexport const Row = ({fluid, children}) => {\n    return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>\n};\n\n// requires that a bootstrap size is entered when used\n// <Col size=\"md-6\">\nexport const Col = ({size, children}) => {\n    return(\n        <div\n            className={size\n            .split(\" \")\n            .map(size => \"col-\" + size)\n            .join(\" \")}\n        >\n            {children}\n        </div>\n    );\n};","import axios from \"axios\";\n\nexport default {\n\n    // api route for external api,\n    googleSearch: function(str) {\n        const queryString = str.split(\" \").join(\"+\");\n        return axios.get(`/api/google?title=${queryString}`);\n    },\n\n    // api route to get saved books\n    getBooks: function() {\n        return axios.get(\"/api/books\");\n    },\n\n    // I don't think I need this one\n    getBook: function(id) {\n        return axios.get(\"/api/books/\" + id);\n    },\n\n    // api route to save book\n    saveBook: function (bookData) {\n        return axios.post(\"/api/books\", bookData);\n    },\n\n    // api route to delete book from saved list\n    deleteBook: function(id) {\n        return axios.delete(\"/api/books/\" + id);\n    }\n\n};","import React, { useRef } from \"react\";\nimport { useStateContext } from \"../../utils/GlobalState\";\nimport { Container, Row, Col } from \"../Grid\";\nimport API from \"../../utils/API\";\n\nconst Search = () => {\n\n    const titleRef = useRef();\n\n    const [state, dispatch] = useStateContext();\n\n    const handleClick = async (e) => {\n        e.preventDefault();\n\n        const response = await API.googleSearch(titleRef.current.value);\n\n        console.log(response.data);\n\n        dispatch({\n            type: \"search\",\n            post: response.data\n        });\n\n        titleRef.current.value = \"\";\n    };\n\n    return (\n        <Container>\n            <Row>\n                <div className=\"input-group\">\n                    <Col size=\"md-8\">\n                        <div className=\"form-outline\">\n                            <input type=\"search\" id=\"form1\" className=\"form-control\" ref={titleRef}/>\n                        </div>\n                    </Col>\n                    <Col size=\"md-4\">\n                        <button type=\"button\" className=\"btn btn-primary\" onClick={handleClick}>\n                            <i className=\"fas fa-search\">Search</i>\n                        </button>\n                    </Col>\n                </div>\n            </Row>\n        </Container>\n    );\n};\n\nexport default Search;","import React from \"react\";\nimport \"./style.css\";\n\nexport const List = ({ children }) => {\n    return (\n        <div className=\"list-overflow-container\">\n            <ul className=\"list-group\">{children}</ul>\n        </div>\n    );\n};\n\nexport const ListItem = ({ children }) => {\n    return <li className=\"list-group-item\">{children}</li>\n};","import React, { useEffect } from \"react\";\nimport { useStateContext } from \"../../utils/GlobalState\";\nimport { Container, Row, Col } from \"../Grid\";\nimport { List, ListItem } from \"../List\";\nimport API from \"../../utils/API\";\n\nconst SearchResults = () => {\n\n    const [state, dispatch] = useStateContext();\n\n    const addSaved = async (data) => {\n        try {\n            // filter data\n            const filteredData = {\n                title: data.title,\n                author: data.authors[0],\n                description: data.description,\n                image: data.imageLinks.smallThumbnail,\n                link: data.infoLink\n            };\n\n            const response = await API.saveBook(filteredData);\n\n            console.log(response);\n\n        } catch (err) {\n            console.log(err)\n        };\n    };\n\n    return (\n        state && state.posts && state.posts.length ? (\n                state.posts.map(result =>\n                    <ListItem key={result.id}>\n                        <Container>\n                            <Row>\n                                <Col size=\"md-3\">\n                                    <img src={result.volumeInfo.imageLinks.smallThumbnail} />\n                                </Col>\n                                <Col size=\"md-9\">\n                                    <Container>\n                                        <Row>\n                                            <strong>\n                                                {result.volumeInfo.title} by {result.volumeInfo.authors.join(\",\")}\n                                            </strong>\n                                        </Row>\n                                        {result.volumeInfo.description ? (\n                                            <Row>\n                                                {result.volumeInfo.description.substring(0,250) /*only load 250 characters*/} \n                                            </Row>\n                                            ) : (\n                                            <Row>\n                                                No description available.    \n                                            </Row>\n                                        )}\n                                        <Row>\n                                            <button className=\"btn\" onClick={ () => addSaved(result.volumeInfo)}>\n                                                ❤️ Add to Saved\n                                            </button>\n                                            <a href={result.volumeInfo.infoLink} target=\"_blank\" rel=\"noopener noreferrer\">\n                                                <button className=\"btn btn-secondary\">\n                                                    View\n                                                </button>\n                                            </a>\n                                        </Row>\n                                    </Container>\n                                </Col>\n                            </Row>\n                        </Container>\n                    </ListItem>\n                )\n\n            \n        ) : (\n            <h3>Search for a book to see results.</h3>\n        )\n    );\n};\n\nexport default SearchResults;","import React from \"react\";\nimport Search from \"../components/SearchBar\";\nimport SearchResults from \"../components/SearchResults\";\nimport { Container, Row, Col} from \"../components/Grid\";\n\nconst Home = () => {\n\n    return (\n        <div>\n            <Container fluid>\n                <Row>\n                    <Col size=\"md-6\">\n                        <Search />\n                    </Col>\n                    <Col size=\"md-6\">\n                        <SearchResults />\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    );\n};\n\nexport default Home;","import React, { useState, useEffect } from \"react\";\nimport API from \"../../utils/API\";\nimport { Container, Row, Col } from \"../Grid\";\nimport { List, ListItem } from \"../List\";\n\nconst BookCard = () => {\n\n    const [books, setBooks] = useState(undefined);\n\n    const getBooks = async () => {\n        const response = await API.getBooks();\n        console.log(response.data);\n        setBooks(response.data);\n    };\n\n    const deleteBook = async (id) => {\n        const removed = await API.deleteBook(id);\n        console.log(removed);\n        getBooks();\n    };\n\n    useEffect(() => {\n        getBooks();\n    }, []);\n\n    return (\n        books ? (\n            books.map(result =>\n                <ListItem key={result._id}>\n                    <Container>\n                        <Row>\n                            { result.image ? (\n                                <Col size=\"md-3\">\n                                    <img src={result.image} />\n                                </Col> ) : (\n                                <Col size=\"md-3\">\n                                    <p>No image found.</p>\n                                </Col>\n                            )\n                            }\n                            <Col size=\"md-9\">\n                                <Container>\n                                    <Row>\n                                        <strong>\n                                            {result.title} by {result.author}\n                                        </strong>\n                                    </Row>\n                                    {result.description ? (\n                                        <Row>\n                                            {result.description.substring(0,250) /*only load 250 characters*/} \n                                        </Row>\n                                        ) : (\n                                        <Row>\n                                            No description available.    \n                                        </Row>\n                                    )}\n                                    {result.link ? (\n                                        <Row>\n                                            <a href={result.link} target=\"_blank\" rel=\"noopener noreferrer\">\n                                                <button className=\"btn btn-secondary\">\n                                                    View\n                                                </button>\n                                            </a>\n                                            <button className=\"btn btn-primary\" onClick={() => {deleteBook(result._id)}}>\n                                                Remove\n                                            </button> \n                                        </Row>) : (\n                                        <Row>\n                                            <p>No link found.</p>\n                                        </Row>\n                                        )}\n                                </Container>\n                            </Col>\n                        </Row>\n                    </Container>\n                </ListItem>\n            )\n        ) : (\n            <h3>No books have been saved.</h3>\n        ) \n    );\n};\n\nexport default BookCard;","import React from \"react\";\nimport BookCard from \"../components/BookCard\";\n\nconst Saved = () => {\n\n    return (\n        <BookCard />\n    );\n};\n\nexport default Saved;","import React from \"react\";\nimport { Container, Row, Col} from \"../Grid\";\n\nconst Nav = () => {\n    return(\n        <Container>\n            <Row>\n                <Col size=\"md-2\">\n                    <img />\n                </Col>\n                <Col size=\"md-6\">\n                    <h1>Google Book Search</h1>\n                </Col>\n                <Col size=\"md-2\">\n                    <a href={\"/\"}>\n                        Home\n                    </a>\n                </Col>\n                <Col size =\"md-2\">\n                    <a href = {\"/saved\"}>\n                        Saved Books\n                    </a>\n                </Col>\n            </Row>\n        </Container>\n    );\n};\n\nexport default Nav;","import React from \"react\";\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport { StateProvider } from \"./utils/GlobalState\";\nimport Home from \"./pages/Home\";\nimport Saved from \"./pages/Saved\";\nimport Nav from \"./components/Nav\";\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <StateProvider>\n          <Nav />\n\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/saved\" component={Saved} />\n          </Switch>\n         </StateProvider> \n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}